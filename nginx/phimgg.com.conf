# HTTP server - redirects to HTTPS and handles Let's Encrypt challenges
server {
    listen 80;
    listen [::]:80;
    server_name phimgg.com www.phimgg.com;

    # Let's Encrypt challenge location
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        allow all;
    }

    # Redirect all other HTTP traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS server - main configuration with FIXED STATIC FILE SERVING
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name phimgg.com www.phimgg.com;

    # SSL Certificate Configuration
    ssl_certificate /etc/letsencrypt/live/phimgg.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/phimgg.com/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/phimgg.com/chain.pem;

    # Modern SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;

    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # Security Headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # CORS Headers - Enhanced
    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, Accept, Origin, Cache-Control, Pragma" always;
    add_header Access-Control-Allow-Credentials "true" always;
    add_header Access-Control-Max-Age "1728000" always;

    # Handle preflight requests
    if ($request_method = 'OPTIONS') {
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, Accept, Origin, Cache-Control, Pragma" always;
        add_header Access-Control-Allow-Credentials "true" always;
        add_header Access-Control-Max-Age "1728000" always;
        add_header Content-Length 0;
        add_header Content-Type "text/plain charset=UTF-8";
        return 204;
    }

    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Logging
    access_log /var/log/nginx/phimgg.com.access.log main;
    error_log /var/log/nginx/phimgg.com.error.log warn;

    # Create a volume mount for static files from Docker container
    # This assumes we'll mount the container's static files to /var/www/filmflex/dist/public
    root /var/www/filmflex/dist/public;

    # Static file serving with proper caching - FIXED
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp|avif)$ {
        try_files $uri @backend;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Cache-Status "STATIC-FILE";
        access_log off;
    }

    # Manifest and service worker files
    location ~* \.(json|webmanifest)$ {
        try_files $uri @backend;
        expires 1h;
        add_header Cache-Control "public";
        add_header X-Cache-Status "MANIFEST";
    }

    # Service worker - no caching
    location = /sw.js {
        try_files $uri @backend;
        expires 0;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header X-Cache-Status "SW";
    }

    # Favicon and apple touch icon
    location ~* \.(ico)$ {
        try_files $uri @backend;
        expires 1M;
        add_header Cache-Control "public";
        access_log off;
    }

    # API routes with rate limiting
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        limit_req_status 429;
        
        proxy_pass http://127.0.0.1:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Authentication routes with stricter rate limiting
    location ~ ^/(login|register|auth)/ {
        limit_req zone=login burst=5 nodelay;
        limit_req_status 429;
        
        proxy_pass http://127.0.0.1:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Health check endpoint (no rate limiting)
    location = /api/health {
        proxy_pass http://127.0.0.1:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        access_log off;
    }

    # Backend fallback for when files are not found in static directory
    location @backend {
        proxy_pass http://127.0.0.1:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # WebSocket support for real-time features
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        add_header X-Cache-Status "BACKEND";
    }

    # Main application - serve index.html for SPA routes
    location / {
        limit_req zone=general burst=10 nodelay;
        
        try_files $uri $uri/ /index.html @backend;
        add_header X-Cache-Status "SPA";
    }

    # Let's Encrypt challenge location
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        allow all;
    }

    # Security: deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Security: deny access to sensitive files
    location ~* \.(env|log|sql|bak|backup)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Security - Block common attack patterns
    location ~* \.(php|asp|aspx|jsp)$ {
        return 444;
    }
    
    location ~* /wp-(admin|content|includes) {
        return 444;
    }
}
