version: '3.8'

services:
  # PostgreSQL Database from Docker Hub
  postgres:
    image: cuongtm2012/filmflex-postgres:latest
    container_name: filmflex-postgres
    environment:
      POSTGRES_DB: filmflex
      POSTGRES_USER: filmflex
      POSTGRES_PASSWORD: filmflex2024
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - filmflex-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U filmflex -d filmflex"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # FilmFlex Application from Docker Hub
  app:
    image: cuongtm2012/filmflex-app:latest
    container_name: filmflex-app
    environment:
      NODE_ENV: production
      PORT: 5000
      DATABASE_URL: postgresql://filmflex:filmflex2024@postgres:5432/filmflex
      SESSION_SECRET: filmflex_production_secret_2024
      ALLOWED_ORIGINS: "*"
      CLIENT_URL: "*"
      DOMAIN: 38.54.14.154
      SERVER_IP: 38.54.14.154
    ports:
      - "5000:5000"
    networks:
      - filmflex-network
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - app_logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  filmflex-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  app_logs:
    driver: local