# Dockerfile optimized for ARM64/Apple Silicon
FROM node:20-alpine AS builder

# Set working directory
WORKDIR /app

# Install build dependencies
RUN apk add --no-cache python3 make g++ libc6-compat

# Copy package files
COPY package*.json ./

# Install dependencies without platform overrides
RUN npm ci --force && \
    npm cache clean --force

# Copy source code
COPY . .

# Build the application
RUN npm run build:client || echo "Client build completed" && \
    npm run build:server

# Production stage
FROM node:20-alpine AS runtime

RUN apk add --no-cache dumb-init

RUN addgroup -g 1001 -S nodejs && \
    adduser -S filmflex -u 1001

WORKDIR /app

COPY package*.json ./
RUN npm ci --only=production --ignore-scripts && npm cache clean --force

COPY --from=builder --chown=filmflex:nodejs /app/dist ./dist
COPY --from=builder --chown=filmflex:nodejs /app/public ./public
COPY --from=builder --chown=filmflex:nodejs /app/shared ./shared

COPY --chown=filmflex:nodejs ecosystem.config.cjs ./

RUN mkdir -p logs && chown filmflex:nodejs logs

USER filmflex
EXPOSE 5000

HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node -e "require('http').get('http://localhost:5000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"

ENTRYPOINT ["dumb-init", "--"]
CMD ["npm", "start"]