Feature: Add to List (Add Movies/Shows to Personal List)


### 1. Purpose  
Allow logged-in users to add movies or TV shows to their personal list (My List) for easy tracking and quick access later.


---


### 2. Scope  
- Applies to logged-in users only.  
- Available on movie detail pages, movie lists, and video playback pages.  
- The personal list is stored on the server and linked to the user account.


---


### 3. Key Features


| ID   | Feature                   | Description                                                                                  |
|-------|--------------------------|----------------------------------------------------------------------------------------------|
| FR1   | Add movie to list         | User clicks "Add to List" button to add a movie to their personal list.                      |
| FR2   | Remove movie from list    | If the movie is already in the list, the button changes to "Remove from List" to remove it. |
| FR3   | Display movie status      | Clearly show whether a movie is already in the user's list on the UI.                        |
| FR4   | Personal list display     | Users can view all movies added in the "My List" page.                                      |
| FR5   | Data synchronization      | The personal list is saved on the server and synced across devices when users log in.        |


---


### 4. Conditions and Constraints


- Users must be logged in to add or remove movies from the list.  
- If not logged in, clicking "Add to List" triggers a login prompt or redirects to the login page.  
- Each movie can only be added once (no duplicates).  
- The list may have a maximum number of movies (e.g., 100 items).


---


### 5. User Interface (UI)


- The "Add to List" / "Remove from List" button is located near the Play button or movie information.  
- Upon successful addition, the button toggles state with feedback (e.g., a small "Added to your list" notification).  
- The "My List" page displays all added movies with the option to remove them directly.


---


### 6. Add to List Feature Workflow


#### 6.1. Adding a Movie to the List


1. **User views the movie detail page or video playback page.**  
2. **User clicks the "Add to List" button.**  
3. **System checks login status:**  
   - If not logged in, show a login prompt or redirect to the login page.  
   - If logged in, proceed to step 4.  
4. **Send API request to add the movie to the user's personal list on the server.**  
5. **Server processes the request:**  
   - Checks if the movie is already in the list.  
   - If not, adds the movie to the user's list.  
   - Returns success or error (e.g., list full).  
6. **Client receives the response:**  
   - If successful, change button to "Remove from List".  
   - Show success notification.  
   - Update local state.  
   - If error, show appropriate error message.


---


#### 6.2. Removing a Movie from the List


1. **User clicks the "Remove from List" button.**  
2. **Send API request to remove the movie from the user's personal list.**  
3. **Server processes and returns the result.**  
4. **Client updates UI, toggling button back to "Add to List".**  
5. **Show success or error notification.**


---


### 7. Suggested API Endpoints


| Method | Endpoint               | Description                     | Request Body / Params               | Response                         |
|--------|------------------------|---------------------------------|-----------------------------------|---------------------------------|
| POST   | /api/user/list/add     | Add a movie to the personal list | { userId, movieId }                | { success: true/false, message }|
| POST   | /api/user/list/remove  | Remove a movie from the list      | { userId, movieId }                | { success: true/false, message }|
| GET    | /api/user/list         | Get the user's personal list      | { userId } (usually from token)   | { movies: [movieId, ...] }      |


---


### 8. Edge Cases and Error Handling


- Notify the user if the list is full and prevent adding more movies.  
- Notify if the movie does not exist or has been removed.  
- Handle network errors, timeouts, and notify the user accordingly.
