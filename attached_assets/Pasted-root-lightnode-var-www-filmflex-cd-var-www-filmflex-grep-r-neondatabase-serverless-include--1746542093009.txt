root@lightnode:/var/www/filmflex# cd /var/www/filmflex
grep -r "@neondatabase/serverless" --include="*.ts" --include="*.js" .
./server/db.ts:import { Pool, neonConfig } from '@neondatabase/serverless';
./node_modules/drizzle-orm/neon-http/driver.js:import { neon, types } from "@neondatabase/serverless";
./node_modules/drizzle-orm/neon-http/driver.d.ts:import type { HTTPQueryOptions, HTTPTransactionOptions, NeonQueryFunction } from '@neondatabase/serverless';
./node_modules/drizzle-orm/neon-http/session.d.ts:import type { FullQueryResults, NeonQueryFunction } from '@neondatabase/serverless';
./node_modules/drizzle-orm/neon-serverless/driver.js:import { neonConfig, Pool } from "@neondatabase/serverless";
./node_modules/drizzle-orm/neon-serverless/session.js:} from "@neondatabase/serverless";
./node_modules/drizzle-orm/neon-serverless/driver.d.ts:import { Pool, type PoolConfig } from '@neondatabase/serverless';
./node_modules/drizzle-orm/neon-serverless/session.d.ts:import { type Client, Pool, type PoolClient, type QueryResult, type QueryResultRow } from '@neondatabase/serverless';
./node_modules/@neondatabase/serverless/index.d.ts:// @neondatabase/serverless driver types, mimicking pg
./node_modules/@neondatabase/serverless/index.d.ts:   * import { neonConfig } from '@neondatabase/serverless';
./node_modules/@neondatabase/serverless/index.d.ts:   * import { neon } from "@neondatabase/serverless";
./node_modules/@neondatabase/serverless/index.d.ts: * import { neon } from "@neondatabase/serverless";
./dist/index.js:import { Pool, neonConfig } from "@neondatabase/serverless";
./filmflex/dist/index.js:import { Pool, neonConfig } from "@neondatabase/serverless";
./filmflex/server/db.ts:import { Pool, neonConfig } from '@neondatabase/serverless';
./filmflex/node_modules/@neondatabase/serverless/index.d.ts:// @neondatabase/serverless driver types, mimicking pg
./filmflex/node_modules/@neondatabase/serverless/index.d.ts:   * import { neonConfig } from '@neondatabase/serverless';
./filmflex/node_modules/@neondatabase/serverless/index.d.ts:   * import { neon } from "@neondatabase/serverless";
./filmflex/node_modules/@neondatabase/serverless/index.d.ts: * import { neon } from "@neondatabase/serverless";
./filmflex/node_modules/drizzle-orm/neon-http/driver.js:import { neon, types } from "@neondatabase/serverless";
./filmflex/node_modules/drizzle-orm/neon-http/driver.d.ts:import type { HTTPQueryOptions, HTTPTransactionOptions, NeonQueryFunction } from '@neondatabase/serverless';
./filmflex/node_modules/drizzle-orm/neon-http/session.d.ts:import type { FullQueryResults, NeonQueryFunction } from '@neondatabase/serverless';
./filmflex/node_modules/drizzle-orm/neon-serverless/driver.js:import { neonConfig, Pool } from "@neondatabase/serverless";
./filmflex/node_modules/drizzle-orm/neon-serverless/session.js:} from "@neondatabase/serverless";
./filmflex/node_modules/drizzle-orm/neon-serverless/driver.d.ts:import { Pool, type PoolConfig } from '@neondatabase/serverless';
./filmflex/node_modules/drizzle-orm/neon-serverless/session.d.ts:import { type Client, Pool, type PoolClient, type QueryResult, type QueryResultRow } from '@neondatabase/serverless';
root@lightnode:/var/www/filmflex# cat /var/www/filmflex/server/db.ts
import { Pool, neonConfig } from '@neondatabase/serverless';
import { drizzle } from 'drizzle-orm/neon-serverless';
import ws from "ws";
import * as schema from "@shared/schema";

neonConfig.webSocketConstructor = ws;

if (!process.env.DATABASE_URL) {
  throw new Error(
    "DATABASE_URL must be set. Did you forget to provision a database?",
  );
}

export const pool = new Pool({ connectionString: process.env.DATABASE_URL });
export const db = drizzle({ client: pool, schema });
root@lightnode:/var/www/filmflex# cat /var/www/filmflex/package.json | grep -A 10 -B 10 "neondatabase"
  "scripts": {
    "dev": "NODE_ENV=development tsx server/index.ts",
    "build": "vite build && esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outdir=dist",
    "start": "NODE_ENV=production node dist/index.js",
    "check": "tsc",
    "db:push": "drizzle-kit push"
  },
  "dependencies": {
    "@hookform/resolvers": "^3.10.0",
    "@jridgewell/trace-mapping": "^0.3.25",
    "@neondatabase/serverless": "^0.10.4",
    "@radix-ui/react-accordion": "^1.2.4",
    "@radix-ui/react-alert-dialog": "^1.1.7",
    "@radix-ui/react-aspect-ratio": "^1.1.3",
    "@radix-ui/react-avatar": "^1.1.4",
    "@radix-ui/react-checkbox": "^1.1.5",
    "@radix-ui/react-collapsible": "^1.1.4",
    "@radix-ui/react-context-menu": "^2.2.7",
    "@radix-ui/react-dialog": "^1.1.7",
    "@radix-ui/react-dropdown-menu": "^2.1.7",
    "@radix-ui/react-hover-card": "^1.1.7",
root@lightnode:/var/www/filmflex# 