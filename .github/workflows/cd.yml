name: CD

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download build artifacts
      uses: dawidd6/action-download-artifact@v2
      with:
        workflow: ci.yml
        workflow_conclusion: success
        name: dist-folder
        path: dist
        
    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
        
    - name: Deploy to VPS
      env:
        SERVER_IP: ${{ secrets.SERVER_IP }}
        SERVER_USER: ${{ secrets.SERVER_USER }}
      run: |
        # Create deployment package
        mkdir -p deploy
        cp -r dist deploy/
        cp -r server deploy/
        cp -r shared deploy/
        cp -r client deploy/
        cp package.json package-lock.json ecosystem.config.cjs deploy.sh deploy/
        
        # Create a temporary release directory
        ssh $SERVER_USER@$SERVER_IP "mkdir -p ~/releases/$(date +%Y%m%d_%H%M%S)"
        
        # Copy deployment package
        rsync -avz --delete deploy/ $SERVER_USER@$SERVER_IP:~/releases/$(date +%Y%m%d_%H%M%S)/
        
        # Create symlink for current release
        ssh $SERVER_USER@$SERVER_IP "ln -sfn ~/releases/$(date +%Y%m%d_%H%M%S) ~/current_release"
        
        # Run deploy script
        ssh $SERVER_USER@$SERVER_IP "cd ~/current_release && chmod +x deploy.sh && ./deploy.sh --deploy"
        
    - name: Verify deployment
      env:
        SERVER_IP: ${{ secrets.SERVER_IP }}
        SERVER_USER: ${{ secrets.SERVER_USER }}
      run: |
        # Check server status
        ssh $SERVER_USER@$SERVER_IP "cd ~/current_release && ./deploy.sh --status"